{"version":3,"sources":["components/Header.js","components/Form.js","components/Description.js","components/Result.js","pages/Home.js","scripts/remoteActionsLocal.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","handleclick","bind","state","data","$","window","on","scrollTop","addClass","removeClass","console","log","this","setState","showmodal","className","href","type","id","hidden","htmlFor","Component","FormUse","Select","Option","handleSubmit","e","preventDefault","form","validateFields","err","values","notification","open","message","description","onClick","error","checkStatus","checkInTime","Date","sendValuesToServer","then","response","catch","handleSelectChange","value","setFieldsValue","note","status","getFieldDecorator","labelCol","span","wrapperCol","onSubmit","Item","label","rules","required","offset","htmlType","WrappedApp","Form","create","name","DescUse","phoneNumber","sendNumber","res","checkStatusCheckOut","email","address","hostName","JSON","stringify","title","bordered","executeOnClick","ResultUse","extra","key","Home","checkOutStatus","options","method","headers","body","fetch","json","isVisitorCheckedOut","Promise","reject","remoteActions","isVisitorInfoSaved","displaycomp","_sendNumber","_checkStatusCheckOut","_sendValuesToServer","_checkStatus","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75e6227e.chunk.js","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport { Link } from 'react-router-dom';\nimport '../static/header.css';\nimport $ from 'jquery';\nimport { Button} from 'antd';\n\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n    this.handleclick = this.handleclick.bind(this);\n    this.state=({\n      data : false\n    })\n    \n}\n  componentDidMount(){\n    $(window).on(\"scroll\", function() {\n      if($(window).scrollTop() > 50) {\n        $(\"header\").addClass(\"active\");\n      } else {\n        $(\"header\").removeClass(\"active\");\n      }\n    })\n  }\n\n  handleclick(){\n    console.log(\"hello\")\n    this.setState({\n      data : true\n    })\n    this.props.showmodal(this.state.data)\n  }\n   render() {\n\n     return (\n      <header>\n        <div className=\"container\">\n          <div className=\"logo\">\n            <h1><a href='/'> Innovaccer</a></h1>\n          </div>\n\n          <input type=\"checkbox\" id=\"sidebar-toggle\" hidden={true}/>\n          <label htmlFor=\"sidebar-toggle\" className=\"hamburger\"><span></span></label>\n\n          <div className=\"sidebar\">\n            <nav className=\"sidebar-nav\">\n              <ul>\n                <li> <a href='/'> Summergeek-Task</a></li>\n              </ul>\n            </nav>\n            <div className=\"accent\"></div>\n          </div>\n          <div className=\"sidebar-shadow\" id=\"sidebar-shadow\"></div>\n\n          {/* Desktop Navigation Menu */}\n          <nav className=\"desktop-nav\">\n            <ul>\n            <li><a href='/'> Summergeek-Task</a></li>\n            </ul>\n          </nav>\n        </div>\n      </header>\n\n     );\n   }\n }\nexport default Header;\n","import React, {Component, Fragment} from 'react';\n\nimport { Form, Select, Input, Button, notification } from 'antd';\n\nconst { Option } = Select;\n\nclass FormUse extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = ({\n        status: false\n        })\n    }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n        notification.open({\n            message: 'Processing Form details',\n            description:\n            'Processing Your details.',\n            onClick: () => {\n            console.log('Notification Clicked!');\n            },\n        });\n        if (!err) {\n            values.checkInTime = new Date();\n            this.props.sendValuesToServer(values).then((response) => {\n                notification.open({\n                    message: 'Checked-In',\n                    description:\n                    'User Checked-In',\n                    onClick: () => {\n                    console.log('Notification Clicked!');\n                    },\n                });\n                this.props.checkStatus(true);\n            }).catch((err) => {\n                console.error(`An error occurred. Error:\\n${err}`);\n            }) \n            \n        }\n        else {\n            console.error(`An error occurred. Error:\\n${err}`);\n            this.props.checkStatus(false);\n        }\n    });\n  };\n\n  handleSelectChange = value => {\n    console.log(value);\n    this.props.form.setFieldsValue({\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmit}>\n          <h3>Visitor's Info</h3>\n        <Form.Item label=\"Name\">\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: 'Please input visitor Name!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Phone Number\">\n          {getFieldDecorator('phoneNumber', {\n            rules: [{ required: true, message: 'Please input visitor Phone Number!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Email\">\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input visitor Email!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Address Visited\">\n          {getFieldDecorator('address', {\n            rules: [{ required: true, message: 'Please input Address Visited!' }],\n          })(<Input />)}\n        </Form.Item>\n        <br/><br/>\n        <h3>Host's Info</h3>\n        <Form.Item label=\"Host Name\">\n          {getFieldDecorator('hostName', {\n            rules: [{ required: true, message: 'Please input Host Name!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Phone Number Host\">\n          {getFieldDecorator('phoneNumberHost', {\n            rules: [{ required: true, message: 'Please input Host Phone Number!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Email Host\">\n          {getFieldDecorator('emailHost', {\n            rules: [{ required: true, message: 'Please input Host Email!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Check-In\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedApp = Form.create({ name: 'coordinated' })(FormUse);\n\nexport default WrappedApp;","import { Descriptions, Button, notification } from 'antd';\nimport React, {Component, Fragment} from 'react';\n\nexport default class DescUse extends Component {\n    executeOnClick(phoneNumber, checkInTime){\n        this.props.sendNumber(phoneNumber, checkInTime)\n        .then((res)=> {\n            notification.open({\n                message: 'Checked-Out',\n                description:\n                'User Checked-Out',\n                onClick: () => {\n                console.log('Notification Clicked!');\n                },\n            });\n            console.log(\"out yo\")\n            this.props.checkStatusCheckOut(true)\n        }).catch((err)=> {\n            console.log(err);\n        })\n    }\n    render() {\n        const { values } = this.props;\n        const { name, email, phoneNumber, address, hostName } = values;\n        let { checkInTime } = values;\n        checkInTime = JSON.stringify(checkInTime);\n        return (\n            <Fragment>\n                <Descriptions title=\"User Info\" bordered>\n                    <Descriptions.Item label=\"Name\">{name}</Descriptions.Item>\n                    <Descriptions.Item label=\"Email-ID\">{email}</Descriptions.Item>\n                    <Descriptions.Item label=\"Address Visited\">{address}</Descriptions.Item>\n                    <Descriptions.Item label=\"Host Name\">{hostName}</Descriptions.Item>\n                    <Descriptions.Item label=\"Phone Number\" span={2}>{phoneNumber}</Descriptions.Item>\n                    <Descriptions.Item label=\"Check-In Time\" span={2}>{checkInTime}</Descriptions.Item>\n                </Descriptions>\n                <br/><br/>\n                <Button onClick={() => {this.executeOnClick(phoneNumber, checkInTime)}}>Check-Out</Button>\n            </Fragment>\n        )\n    }\n}\n ","import { Result, Button } from 'antd';\nimport React, {Component, Fragment} from 'react';\n\nexport default class ResultUse extends Component {\n    render() {\n        return (\n            <Fragment>\n                <Result\n                    status=\"success\"\n                    title=\"Successfully Recorded Event\"\n                    extra={[\n                    <a href='/'><Button type=\"primary\" key=\"console\">\n                        Go Console\n                    </Button></a>\n                     ]} \n                />\n\n            </Fragment>\n        )\n    }\n}\n ","import React, {Component, Fragment} from 'react';\nimport Header from '../components/Header';\nimport Form from '../components/Form';\nimport Desc from '../components/Description';\nimport Result from '../components/Result';\n\n// import * as remoteActions from '../scripts/remoteActions';\nimport * as remoteActions from '../scripts/remoteActionsLocal';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: false,\n            checkOutStatus: false,\n            values: {}\n        }\n    }\n    _sendNumber(phoneNumber, checkInTime) {\n        console.log(phoneNumber, checkInTime);\n        return remoteActions.sendNumber(phoneNumber, checkInTime);\n    }\n    _checkStatusCheckOut(value) {\n        console.log('Mhm. ' + value);\n        this.setState({ checkOutStatus: value });\n      }\n    _checkStatus(value) {\n        console.log('Mhm. ' + value);\n        this.setState({ status: value });\n      }\n    _sendValuesToServer(values) {\n        this.setState({ values });\n        return remoteActions.sendValuesToServer(values);\n    }\n    render() {\n        let { status, checkOutStatus } = this.state;\n        let displaycomp;\n        if (status && !checkOutStatus) {\n            displaycomp = (\n            <main>\n                <Desc values={this.state.values} sendNumber={this._sendNumber.bind(this)} checkStatusCheckOut={this._checkStatusCheckOut.bind(this)} />\n            </main>)\n        } else if (!status && !checkOutStatus) {\n            displaycomp = (\n            <main>\n                <Form sendValuesToServer={this._sendValuesToServer.bind(this)} checkStatus={this._checkStatus.bind(this)} />\n            </main>)\n        }\n        else if(status && checkOutStatus){\n            displaycomp = (\n                <main>\n                    <Result />\n                </main>\n            )\n        }\n        return (\n            <Fragment>\n                <Header/>\n                {\n                    displaycomp\n                }\n            </Fragment>\n        )\n    }\n}\n\n\nexport default Home;\n","export function sendValuesToServer(values) {\n    if (values) {\n        let options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n        }\n        options.body = JSON.stringify(values);\n        console.log(options)\n        let promise = fetch(\"https://still-beyond-30740.herokuapp.com/api/handleCheckInInfo\", options).then((response) => {\n            return response.json();\n        }).then((response) => {\n            if (response) {\n                console.log(JSON.stringify(response, null, 4));\n                return { isVisitorInfoSaved: true };\n            }\n            throw 'Issue with response.';\n        }).catch((err) => {\n            console.error(`An error occurred. Error:\\n${err}`);\n            return { isVisitorInfoSaved: false };\n        })\n        return promise;\n    }\n    return Promise.reject('Issue with values.');\n}\n\nexport function sendNumber(phoneNumber, checkInTime) {\n    if (phoneNumber && checkInTime) {\n        let options = {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n        }\n        options.body = JSON.stringify({ phoneNumber, checkInTime });\n        let promise = fetch(\"https://still-beyond-30740.herokuapp.com/api/handleCheckOutInfo\", options).then((response) => {\n            console.log(response)\n            return response.json();\n        }).then((response) => {\n            if (response) {\n                console.log(JSON.stringify(response, null, 4));\n                return { isVisitorCheckedOut: true };\n            }\n            throw 'Issue with response.';\n        }).catch((err) => {\n            console.error(`An error occurred. Error:\\n${err}`);\n            return { isVisitorCheckedOut: false };\n        })\n        return promise;\n    }\n    return Promise.reject('Issue with phone-number or checkInTime.');\n}\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './pages/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <Route exact path='/' component={Home}/>\n        </Router>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}